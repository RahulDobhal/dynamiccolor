import React, { useEffect } from "react";
import {
  C1Chat,
  useThreadManager,
  useThreadListManager,
} from "@thesysai/genui-sdk";
import "@crayonai/react-ui/styles/index.css";

export const Chat = () => {
  const threadListManager = useThreadListManager({
    fetchThreadList: async () => [],
    deleteThread: async () => {},
    updateThread: async (t) => t,
    onSwitchToNew: async () => {},
    onSelectThread: async () => {},
    createThread: async (firstMessage) => {
      return {
        id: "1",
        threadId: "1",
        title: "New Thread",
        createdAt: new Date(),
      };
    },
  });

  const threadManager = useThreadManager({
    threadListManager,
    loadThread: async () => [message],
    onUpdateMessage: async () => {},
  });

  useEffect(() => {
    threadListManager.selectThread("1");
  }, []);

  return (
    <C1Chat
      threadManager={threadManager}
      threadListManager={threadListManager}
    />
  );
};

const message = {
  id: "1",
  role: "assistant" as const,
  content:
    "<content>{\n  &quot;component&quot;: {\n    &quot;component&quot;: &quot;Card&quot;,\n    &quot;props&quot;: {\n      &quot;children&quot;: [\n        {\n          &quot;component&quot;: &quot;CardHeader&quot;,\n          &quot;props&quot;: {\n            &quot;title&quot;: &quot;Component Showcase&quot;,\n            &quot;subtitle&quot;: &quot;Demonstration of various UI components&quot;\n          }\n        },\n        {\n          &quot;component&quot;: &quot;TextContent&quot;,\n          &quot;props&quot;: {\n            &quot;textMarkdown&quot;: &quot;Welcome to our component showcase! Below you&#39;ll find examples of different UI components.&quot;\n          }\n        },\n        {\n          &quot;component&quot;: &quot;Tabs&quot;,\n          &quot;props&quot;: {\n            &quot;children&quot;: [\n              {\n                &quot;value&quot;: &quot;inputs&quot;,\n                &quot;trigger&quot;: {\n                  &quot;text&quot;: &quot;Input Components&quot;,\n                  &quot;icon&quot;: {\n                    &quot;component&quot;: &quot;Icon&quot;,\n                    &quot;props&quot;: {\n                      &quot;name&quot;: &quot;input&quot;\n                    }\n                  }\n                },\n                &quot;content&quot;: [\n                  {\n                    &quot;component&quot;: &quot;Form&quot;,\n                    &quot;props&quot;: {\n                      &quot;name&quot;: &quot;demo-form&quot;,\n                      &quot;children&quot;: [\n                        {\n                          &quot;label&quot;: &quot;Text Input&quot;,\n                          &quot;children&quot;: {\n                            &quot;component&quot;: &quot;Input&quot;,\n                            &quot;props&quot;: {\n                              &quot;name&quot;: &quot;text-input&quot;,\n                              &quot;placeholder&quot;: &quot;Enter text...&quot;\n                            }\n                          }\n                        },\n                        {\n                          &quot;label&quot;: &quot;Select Option&quot;,\n                          &quot;children&quot;: {\n                            &quot;component&quot;: &quot;Select&quot;,\n                            &quot;props&quot;: {\n                              &quot;name&quot;: &quot;select-demo&quot;,\n                              &quot;placeholder&quot;: &quot;Choose an option&quot;,\n                              &quot;children&quot;: [\n                                {\n                                  &quot;component&quot;: &quot;SelectItem&quot;,\n                                  &quot;props&quot;: {\n                                    &quot;value&quot;: &quot;1&quot;,\n                                    &quot;children&quot;: &quot;Option 1&quot;\n                                  }\n                                },\n                                {\n                                  &quot;component&quot;: &quot;SelectItem&quot;,\n                                  &quot;props&quot;: {\n                                    &quot;value&quot;: &quot;2&quot;,\n                                    &quot;children&quot;: &quot;Option 2&quot;\n                                  }\n                                }\n                              ]\n                            }\n                          }\n                        }\n                      ],\n                      &quot;buttons&quot;: {\n                        &quot;component&quot;: &quot;ButtonGroup&quot;,\n                        &quot;props&quot;: {\n                          &quot;children&quot;: [\n                            {\n                              &quot;component&quot;: &quot;Button&quot;,\n                              &quot;props&quot;: {\n                                &quot;name&quot;: &quot;submit-btn&quot;,\n                                &quot;children&quot;: &quot;Submit&quot;,\n                                &quot;variant&quot;: &quot;primary&quot;\n                              }\n                            }\n                          ]\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              {\n                &quot;value&quot;: &quot;display&quot;,\n                &quot;trigger&quot;: {\n                  &quot;text&quot;: &quot;Display Components&quot;\n                },\n                &quot;content&quot;: [\n                  {\n                    &quot;component&quot;: &quot;Accordion&quot;,\n                    &quot;props&quot;: {\n                      &quot;children&quot;: [\n                        {\n                          &quot;value&quot;: &quot;tags&quot;,\n                          &quot;trigger&quot;: {\n                            &quot;text&quot;: &quot;Tag Examples&quot;\n                          },\n                          &quot;content&quot;: [\n                            {\n                              &quot;component&quot;: &quot;TagBlock&quot;,\n                              &quot;props&quot;: {\n                                &quot;children&quot;: [\n                                  {\n                                    &quot;text&quot;: &quot;Active&quot;,\n                                    &quot;iconName&quot;: &quot;check-circle&quot;\n                                  },\n                                  {\n                                    &quot;text&quot;: &quot;Pending&quot;,\n                                    &quot;iconName&quot;: &quot;clock&quot;\n                                  }\n                                ]\n                              }\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    &quot;component&quot;: &quot;Table&quot;,\n                    &quot;props&quot;: {\n                      &quot;tableHeader&quot;: {\n                        &quot;rows&quot;: [\n                          {\n                            &quot;children&quot;: &quot;Name&quot;\n                          },\n                          {\n                            &quot;children&quot;: &quot;Status&quot;\n                          }\n                        ]\n                      },\n                      &quot;tableBody&quot;: {\n                        &quot;rows&quot;: [\n                          {\n                            &quot;children&quot;: [\n                              &quot;John Doe&quot;,\n                              &quot;Active&quot;\n                            ]\n                          }\n                        ]\n                      }\n                    }\n                  }\n                ]\n              },\n              {\n                &quot;value&quot;: &quot;charts&quot;,\n                &quot;trigger&quot;: {\n                  &quot;text&quot;: &quot;Charts&quot;\n                },\n                &quot;content&quot;: [\n                  {\n                    &quot;component&quot;: &quot;BarChart&quot;,\n                    &quot;props&quot;: {\n                      &quot;categoryKey&quot;: &quot;month&quot;,\n                      &quot;data&quot;: [\n                        {\n                          &quot;month&quot;: &quot;Jan&quot;,\n                          &quot;value&quot;: 30\n                        },\n                        {\n                          &quot;month&quot;: &quot;Feb&quot;,\n                          &quot;value&quot;: 45\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        },\n        {\n          &quot;component&quot;: &quot;ListBlock&quot;,\n          &quot;props&quot;: {\n            &quot;items&quot;: [\n              {\n                &quot;title&quot;: &quot;List Item 1&quot;,\n                &quot;subtitle&quot;: &quot;Description&quot;,\n                &quot;decorativeIcon&quot;: {\n                  &quot;component&quot;: &quot;Icon&quot;,\n                  &quot;props&quot;: {\n                    &quot;name&quot;: &quot;arrow-right&quot;\n                  }\n                }\n              }\n            ]\n          }\n        },\n        {\n          &quot;component&quot;: &quot;Steps&quot;,\n          &quot;props&quot;: {\n            &quot;children&quot;: [\n              {\n                &quot;component&quot;: &quot;StepsItem&quot;,\n                &quot;props&quot;: {\n                  &quot;title&quot;: &quot;Step 1&quot;,\n                  &quot;details&quot;: {\n                    &quot;component&quot;: &quot;TextContent&quot;,\n                    &quot;props&quot;: {\n                      &quot;textMarkdown&quot;: &quot;First step description&quot;\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        },\n        {\n          &quot;component&quot;: &quot;Callout&quot;,\n          &quot;props&quot;: {\n            &quot;variant&quot;: &quot;info&quot;,\n            &quot;title&quot;: &quot;Information&quot;,\n            &quot;description&quot;: &quot;This is an informational callout&quot;\n          }\n        }\n      ]\n    }\n  },\n  &quot;error&quot;: null\n}</content>",
};
